{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","movieTitle","setMovieTitle","foundMovie","setFoundMovie","shouldShowError","setshouldShowError","onSubmit","submitEvent","preventDefault","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","movieName","fetch","then","response","json","Response","imdbID","Title","Plot","Poster","changeMovieProperties","App","state","data","some","film","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3eff08e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst baseUrl = 'https://www.omdbapi.com/?apikey=a6144313&t=';\nconst imdbUrl = 'https://www.imdb.com/title/';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [shouldShowError, setshouldShowError] = useState(false);\n\n  const handleInputChange = (event) => {\n    setMovieTitle(event.target.value);\n    setshouldShowError(false);\n  };\n\n  const changeMovieProperties = movie => ({\n    imdbId: movie.imdbID,\n    title: movie.Title,\n    description: movie.Plot,\n    imgUrl: movie.Poster,\n    imdbUrl: `${imdbUrl}${movie.imdbID}`,\n  });\n\n  const findMovie = movieName => fetch(`${baseUrl}${movieName}`)\n    .then(response => response.json())\n    .then((movie) => {\n      if (movie.Response !== 'False') {\n        return changeMovieProperties(movie);\n      }\n\n      return setshouldShowError(true);\n    })\n    .then(movie => (movie ? setFoundMovie(movie) : setFoundMovie(null)));\n\n  const handleSubmit = (submitEvent) => {\n    submitEvent.preventDefault();\n    if (!movieTitle || !foundMovie) {\n      setshouldShowError(true);\n\n      return;\n    }\n\n    addMovie(foundMovie);\n    setFoundMovie(null);\n    setMovieTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieTitle}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {\n            !shouldShowError\n              ? ''\n              : (\n                <p className=\"help is-danger\">\n                  Can&apos;t find a movie with such a title\n                </p>\n              )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie(movieTitle)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {foundMovie && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard\n          {...foundMovie}\n        />\n      </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (!this.state.movies.some(film => film.imdbId === movie.imdbId)) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}